{"version":3,"sources":["FoodBox/FoodBox.jsx","FoodDetail/FoodDetail.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["FoodBox","onClick","this","props","click","className","src","alt","title","Component","FoodDetail","loading","autoHide","autoHideTimeout","autoHideDuration","autoHeight","autoHeightMin","window","innerHeight","image","undefined","price","vegetarian","healthScore","minute","content","summary","href","App","state","data","foods","word","foodDetail","style","color","cursor","saveTheWord","e","setState","target","value","query","axios","get","headers","then","res","results","catch","error","alert","response","id","header","onChange","type","searchForFood","bind","map","item","FoodDetails","pricePerServing","readyInMinutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30469079.chunk.js","sourcesContent":["import React , {Component} from 'react'\r\nimport './foodBox.css'\r\n\r\nexport default class FoodBox extends Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div onClick={this.props.click} className = 'FoodBox flex'>\r\n                <img src={this.props.src} alt={this.props.title}/>\r\n                <h4>\r\n                    {this.props.title}\r\n                </h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './foodDetail.css'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { Markup } from 'interweave';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport default class FoodDetail extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <section className='foodDetails flex'>\r\n                    <h2>\r\n                        Food Details\r\n                    </h2>\r\n\r\n                    {this.props.loading ?\r\n                        <Scrollbars\r\n                            autoHide\r\n                            autoHideTimeout={1000}\r\n                            autoHideDuration={200}\r\n                            autoHeight\r\n                            autoHeightMin={window.innerHeight - ((window.innerHeight / 100) * 12)}\r\n                        >\r\n                            <figure className='flex'>\r\n                                <img src={this.props.image} alt={this.props.title} />\r\n                                <figcaption>\r\n                                    {this.props.title}\r\n                                </figcaption>\r\n                            </figure>\r\n                            <div className='littleInfo'>\r\n                                <ul className=' flex'>\r\n\r\n\r\n                                    {this.props.price !== undefined && <li>\r\n                                        price:\r\n                            ${this.props.price}\r\n                                    </li>}\r\n\r\n\r\n                                    {this.props.vegetarian !== undefined && <li>\r\n                                        {this.props.vegetarian ? ' vegetarian' : 'not vegetarian'}\r\n                                    </li>}\r\n\r\n\r\n                                    {this.props.healthScore !== undefined && <li>\r\n                                        score :      {this.props.healthScore}\r\n                                    </li>}\r\n\r\n                                    {this.props.minute !== undefined && <li>\r\n                                        ready in {this.props.minute} minute's\r\n                            </li>\r\n                                    }\r\n\r\n\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className='summary'>\r\n\r\n                                <Markup content={this.props.summary} />\r\n                            </div>\r\n                        </Scrollbars>\r\n                        :\r\n                        <div>\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n\r\n\r\n                    <p className='creator flex'>\r\n                        created by :     <h1>Ahmad Rangraz</h1>\r\n                        <div>\r\n                            api <a href='https://spoonacular.com/'> spoonacular</a>\r\n                        </div>\r\n                    </p>\r\n                </section>\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React, {\n  Component\n} from 'react'\nimport './App.css';\nimport FoodBox from './FoodBox/FoodBox.jsx'\nimport FoodDetail from './FoodDetail/FoodDetail.jsx'\nimport {Scrollbars} from 'react-custom-scrollbars'\nimport axios from 'axios'\n\n\n\n\nexport default class App extends Component {\n\n\n  state = {\n    data: [],\n    foods: [],\n    word: '',\n    foodDetail: {},\n    loading : true\n  }\n  style = {\n    color: 'red',\n    cursor: 'pointer'\n  }\n  saveTheWord = e => {\n    this.setState({\n      word: e.target.value\n    })\n  }\n  \n  searchForFood(query) {\n   \n    const header = {headers : {\n      \"Content-Type\": \"application/json\"\n    }}\n    const key = 'apiKey=c35c3f2137a1449c949373e6f3ca17a4'\n      axios.get(`https://api.spoonacular.com/recipes/complexSearch?${key}&query=${query}` , header)\n      .then(res =>{\n        this.setState({\n          foods: res.data.results\n        })\n      }).catch(error =>{\n        alert(error.response);\n      })\n  }\n  async FoodDetails(id) {\n    this.setState({\n      loading : false\n    })\n    const header = {headers : {\n      \"Content-Type\": \"application/json\"\n    }}\n    const key = 'apiKey=c35c3f2137a1449c949373e6f3ca17a4'\n      axios.get(`https://api.spoonacular.com/recipes/${id}/information?${key}` , header) \n      .then(foodDetail =>{\n        this.setState({\n          foodDetail: foodDetail.data ,\n          loading : true\n        })\n      })\n      .catch(error =>{\n        alert(error)\n      })\n      // console.log(this.state.loading);\n  }\n\n  render() {\n\n    const {\n      foodDetail\n    } =this.state\n    return (\n      <main className='main bg-dark'>\n{/* *********** food Recipes ********** */}\n        <section className='foodRec'>\n          <div className = 'cont flex'>\n          <h2>\n            Food Searching\n          </h2>\n          <div className='searchBox flex'>\n            <input onChange={this.saveTheWord} type=\"text\" />\n            <button onClick={this.searchForFood.bind(this, this.state.word)}>\n              Search\n          </button>\n          </div>\n          </div>\n      <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n      autoHeight\n      autoHeightMin={window.innerHeight - ((window.innerHeight/100) * 16) }\n      >\n      <div className = ' foods '>\n          {this.state.foods.map(item => {\n            return (\n              <FoodBox\n                click = {this.FoodDetails.bind(this , item.id)}\n                title={item.title}\n                src={item.image}\n                key={item.id}\n              />\n            )\n          })}\n          </div>\n      </Scrollbars>\n        </section>\n{/* ************ food Recipes ********* */}\n\n\n\n\n\n\n\n\n{/* ****** *** food Details ********** */}\n{/* <FoodDetail\ntitle = 'food title'\nprice = '10'\nvegetarian = {false}\nhealthScore = {32}\nminute = {20}\n\n/> */}\n    <FoodDetail \n    image = {foodDetail.image}\n    title = {foodDetail.title}\n    price = {foodDetail.pricePerServing}\n    vegetarian = {foodDetail.vegetarian}\n    healthScore  = {foodDetail.healthScore}\n    minute = {foodDetail.readyInMinutes}\n    summary = {foodDetail.summary}\n    loading = {this.state.loading}\n    />\n    \n\n    {/* <p>\n    dangerouslySetInnerHTML={{__html: this.state.foodDetail.summary}}\n    </p> */}\n{/* ****** *** food Details ********** */}\n\n\n\n\n\n\n\n\n\n{/* ****** ordering ******** */}\n{/* <section className='order flex'>\n  <h2>\n    Ordering Box\n  </h2>\n</section> */}\n{/* ****** ordering ******** */}\n\n\n      </main>\n    )\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}